user nobody nobody;

worker_processes  1;
worker_rlimit_nofile 10240;

events {
    worker_connections 10240;
    use epoll;
    multi_accept on;
}

http {
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile "on"; 
    tcp_nopush "on";
    tcp_nodelay "on";
    keepalive_timeout "65";
    access_log "/var/log/nginx/access.log";
    error_log "/var/log/nginx/error.log";
    server_tokens off;
    types_hash_max_size 2048;
    client_max_body_size 200m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    upstream docker-api {
        server api:8000;
    }

    upstream docker-flower {
        server flower:5555;
    }

    upstream docker-itpa {
        server itpa:8060;
    }

    upstream docker-socketio {
        server socketio:1337;
    }

    upstream docker-videos-http {
        server video:8010;
    }

    server {
        listen 80;
        listen [::]:80 ipv6only=on;
        listen 443 ssl;
        listen [::]:443 ipv6only=on;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

        location / {
            expires off;
            add_header Cache-Control no-cache;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://itpa:8060;
        }

        location /videos-http/ {
            add_header Cache-Control no-cache;
            rewrite ^/videos-http/(.*)$ /$1 break;
            proxy_pass http://docker-videos-http/;
            proxy_set_header Host $host;
        }

        location /videos/ {
            add_header Cache-Control no-cache;
            proxy_pass http://docker-socketio/videos/;
            proxy_set_header Host $host;
        }

        location /flower/ {
            add_header Cache-Control no-cache;
            rewrite ^/flower/(.*)$ /$1 break;
            proxy_pass http://docker-flower/;
            proxy_set_header Host $host;
        }

        location /socketio/ {
            add_header Cache-Control no-cache;
#           add_header 'Access-Control-Allow-Origin' '*';
#           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#           add_header Access-Control-Allow-Headers X-Requested-With,Content-Type;
#https://github.com/socketio/socket.io/issues/1942
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            rewrite ^/socketio/(.*)$ /$1 break;
            proxy_pass http://docker-socketio/;
        }

        location /api/v1 {
            add_header Cache-Control no-cache;
            #add_header 'Access-Control-Allow-Origin' '*';
            #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            #add_header Access-Control-Allow-Headers X-Requested-With,Content-Type;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass         http://docker-api/;
        }
    }
}
